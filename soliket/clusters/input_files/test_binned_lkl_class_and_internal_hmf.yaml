# run from SOLikeT/soliket/clusters
# command:
# $ cobaya-run input_files/test_binned_lkl_class_and_internal_hmf.yaml -f
output: chains/test

likelihood:
  soliket.BinnedClusterLikelihood:

    # Data
    data:
      data_path: 'data/advact/' # Path to data directory
      cat_file: 'DR5_cluster-catalog_v1.1.fits' # Path to cluster catalog file
      Q_file: 'DR5ClusterSearch/selFn/QFit.fits' # Path to Q function file
      tile_file: 'DR5ClusterSearch/selFn/tileAreas.txt' # Path to tile file
      rms_file: 'DR5ClusterSearch/selFn/RMSTab.fits' # Path to RMS file
    verbose: True

    # Theory
    theorypred:
      choose_dim: '2D' # Specify if likelihood in terms of N(q, z) (2D) or N(z) (1D)
      choose_theory: 'class' # Theory prediction mode, possibilities are camb, class, CCL (CCL is all CCL)
      rel_correction: False # Relativistic corrections for tSZ
      massfunc_mode: 'internal' # Method to compute mass function, possibilities are ccl, internal (Eunseong's implementation)
      md_hmf: '500c' # Mass definition used for HMF
      md_ym: '500c' # Mass definition used for Y-M relation
      compl_mode: 'erf_diff' # Method to compute selection function, possibilities are erf_diff (difference of erfs), erf_prod (product of erfs)
      use_class_sz: True
    # Y-M relation
    YM:
      Mpivot: 3e14 # Mpivot in Y-M relation in [ Msun]

    # Selection function
    selfunc:
      SNRcut: 5. # S/N cutoff in number counts
      # Model for selection function, possibilities are
      # downsample: average rms map, Q into n dwnsmpl_bins
      # inpt_dwnsampld: input rms, Q already pre-downsampled --- from eunseong's implementation
      # full: consider full map, Q function, no downsampling --- exact evaluation.
      # single_tile: run for single tile, no downsampling
      mode: 'downsample' #'downsample'
      dwnsmpl_bins: 3 # If mode=downsample, number of bins to use
      save_dwsmpld: True # Save downsampled Q and rms to npz file and once it exists read those
      average_Q: False # Use average Q function

    binning:
      # redshift bins for number counts
      z:
        zmin: 0.
        zmax: 2.9
        dz: 0.1
      # SNR bins for number counts
      q:
        log10qmin: 0.6
        log10qmax: 2.0
        dlog10q: 0.5
      # mass bins for number counts
      M:
        Mmin: 5e12
        Mmax: 1e16
        dlogM: 0.1

params:
  logA:
    prior:
      min: 2.
      max: 4.
    ref:
      dist: norm
      loc: 3.1
      scale: 0.001
    proposal: 0.001
    latex: \log(10^{10} A_\mathrm{s})
    drop: true
  As:
    value: 'lambda logA: 1e-10*np.exp(logA)'
    latex: A_\mathrm{s}
  sigma8:

  # H0:
  #   derived:

  # theta_MC_100:
  #   prior:
  #     min: 0.5
  #     max: 10
  #   ref:
  #     dist: norm
  #     loc: 1.0411
  #     scale: 0.0004
  #   proposal: 0.0002
  #   latex: 100\theta_\mathrm{MC}
  #   drop: true
  #   renames: theta
  # cosmomc_theta:
  #   value: 'lambda theta_MC_100: 1.e-2*theta_MC_100'
  #   derived: false

  # ombh2: 0.0226576  # for omb = 0.049
  # omch2: 0.1206864
  # ns: 0.965
  # tau: 0.055
  # mnu: 0.0
  # nnu: 3.046
  # omnuh2: 0.
  # w: -1

  omega_b: 0.0226576
  omega_cdm: 0.1206864
  n_s: 0.965
  tau_reio: 0.055
  H0: 68.

  tenToA0: 4.35e-5
  B0: 0.08
  C0: 0.
  scatter_sz: 0.
  bias_sz: 1.

  # omega_b: 0.0226576
  # omega_cdm: 0.1206864
  # n_s: 0.965
  # tau: 0.055
  # H0: 68.

  # sigma8:
  #   latex: \sigma_8
  # Omega_m:
  #   latex: \Omega_\mathrm{m}

sampler:
  evaluate:
      override:
        logA: 3.10034


# theory:
#   soliket.binned_clusters.CCL:
#     transfer_function: 'boltzmann_camb'
#     matter_pk: 'halofit'
#     baryons_pk: 'nobaryons'
#     md_hmf: '200m'
theory:
  classy:
    stop_at_error: true
    extra_args:
      # N_ur: 3.046
      # N_ncdm: 0.
      # N_ur: 2.0328,
      # N_ncdm : 1,
      # m_ncdm : 0.06,
      # T_ncdm : 0.71611,
# theory:
#   # camb:
#   #   extra_args:
#   #     num_massive_neutrinos: 0
#   camb:
#     stop_at_error: true
#     extra_args:
#       num_massive_neutrinos: 0
#       dark_energy_model: fluid
#     ignore_obsolete: True
  # camb:
  #   stop_at_error: true
  #   extra_args:
  #     num_massive_neutrinos: 0
  #     dark_energy_model: fluid
  #   ignore_obsolete: True
  # camb:
    # provides: H0

stop_at_error: true
